apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: import-service-template
  title: Import Service
  description: Import a built service into OpenOps and deploy it to a cluster
  tags:
    - docker
spec:
  owner: ibrahimnasri24@gmail.com
  type: service
  parameters:
    - title: Project Info
      required:
        - project_name
        - owner
      properties:
        project_name:
          title: Project Name
          type: string
          description: Unique name of the microservice
        description:
          title: Description
          type: string
          description: Describe of the project
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
              - User
    - title: Select Infrastructure
      properties:
        EntityPicker:
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              - metadata.infrastructure: aks
            defaultKind: component
        domain:
          title: Domain name
          type: string
          description: Domain name of the cluster
        path:
          title: Url path
          type: string
          description: Url path of the service
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: exportVals
      name: Export Ubility Config Values
      action: ubility:output:exportconfig

    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          cluster_name: ${{ parameters.EntityPicker }}
          entity_name: ${{ parameters.project_name }}
          description: ${{ parameters.description }}
          repo_owner: ${{ (parameters.repoUrl | parseRepoUrl).owner }}
          repo_location: ${{ (parameters.repoUrl | parseRepoUrl).repo }}
          entity_owner: ${{ parameters.owner }}
          domain: ${{ parameters.domain }}
          path: ${{ parameters.path }}
          container_registry: ${{ steps.exportVals.output.container_registry }}
          resource_group: ${{ steps.exportVals.output.resource_group }}
          azure_tenant_id: ${{ steps.exportVals.output.azure_tenant_id }}

    - id: import
      name: Import, Edit and Push
      action: ubility:import:repo
      input:
        repo_url: ${{ (parameters.repoUrl | parseRepoUrl).repo }}

    # - id: createJenkinsPipeline
    #   name: Create Jenkins Pipeline
    #   action: ubility:add:jenkins
    #   input:
    #     project_name: ${{ parameters.project_name }}

    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
    #     catalogInfoPath: "/catalog-info.yaml"
    #     optional: true

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
